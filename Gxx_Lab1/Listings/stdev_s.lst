


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             test, CODE, READONLY
    2 00000000                 export           stdev_s
    3 00000000         
    4 00000000         
    5 00000000         ;r0 is address of the array to calculate, r1 is length a
                       nd r2 is the answer address 
    6 00000000         stdev_s
    7 00000000 E92D 1FF0       push{r4-r12}
    8 00000004 EE30 0A40       vsub.f32         s0,s0,s0
    9 00000008 EE70 0AE0       vsub.f32         s1,s1,s1
   10 0000000C EE31 1A41       vsub.f32         s2,s2,s2
   11 00000010 EE01 1A10       vmov.f32         s2, r1
   12 00000014 EEB8 1A41       VCVT.F32.U32     S2,s2
   13 00000018         
   14 00000018 4604            mov              r4,r0
   15 0000001A 460D            mov              r5,r1
   16 0000001C         
   17 0000001C         sum_loop                             ;might be wrong for
                                                             array of length 0,
                                                             but can easily fix
                                                            ed
   18 0000001C ED94 0A00       vldr.f32         s0,[r4]
   19 00000020 F104 0404       add              r4, r4,#4
   20 00000024         
   21 00000024 EE70 0A80       vadd.f32         s1, s1, s0
   22 00000028         
   23 00000028 F1A5 0501       sub              r5, r5, #1
   24 0000002C 2D00            cmp              r5, #0
   25 0000002E DCF5            bgt              sum_loop
   26 00000030         
   27 00000030         ;---------------------------------
   28 00000030 EE80 0A81       vdiv.f32         s0, s1,s2   ; this step calcula
                                                            te the mean
   29 00000034 460D            mov              r5, r1      ; restore counter
   30 00000036 4604            mov              r4, r0      ; restore array hea
                                                            d
   31 00000038         
   32 00000038         stdev_loop
   33 00000038 EDD4 0A00       vldr.f32         s1,[r4]
   34 0000003C F104 0404       add              r4, r4, #4
   35 00000040         
   36 00000040 EE70 0AC0       vsub.f32         s1, s1, s0  ; difference = valu
                                                            e - mean
   37 00000044 EE60 0AA0       vmul.f32         s1, s1, s1  ; difference square
                                                            
   38 00000048 EE31 1A20       vadd.f32         s2, s2, s1  ; variance += diffe
                                                            rence
   39 0000004C         
   40 0000004C F1A5 0501       sub              r5, r5, #1
   41 00000050 2D00            cmp              r5, #0
   42 00000052 DCF1            bgt              stdev_loop
   43 00000054         
   44 00000054         ;----------------------------------
   45 00000054         
   46 00000054 F1A1 0101       sub              r1, r1, #1  ; n-1
   47 00000058 EE00 1A90       vmov.f32         s1, r1      ; intermediate step
                                                             loading the intege
                                                            r into float reg
   48 0000005C EEF8 0A60       VCVT.F32.U32     S1, S1



ARM Macro Assembler    Page 2 


   49 00000060         
   50 00000060 EE81 1A20       vdiv.f32         s2, s2, s1  ; variance/(n-1)
   51 00000064 EEB1 0AC1       vsqrt.f32        s0, s2      ; square root(varia
                                                            nce/(n-1))
   52 00000068 ED82 0A00       vstr.f32         s0, [r2]
   53 0000006C         
   54 0000006C         DONE
   55 0000006C E8BD 1FF0       pop{r4-r12}
   56 00000070 4770            bx               lr
   57 00000072                 end
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp.sp --apcs=
interwork --depend=.\objects\stdev_s.d -o.\objects\stdev_s.o -I.\RTE\_GXX_Lab1 
-I"C:\Users\Yinuo A Wang\AppData\Local\Arm\Packs\ARM\CMSIS\5.6.0\CMSIS\Core\Inc
lude" -I"C:\Users\Yinuo A Wang\AppData\Local\Arm\Packs\ARM\CMSIS\5.6.0\CMSIS\DS
P\Include" -I"C:\Users\Yinuo A Wang\AppData\Local\Arm\Packs\ARM\CMSIS\5.6.0\Dev
ice\ARM\ARMCM4\Include" --predefine="__EVAL SETA 1" --predefine="__UVISION_VERS
ION SETA 529" --predefine="_RTE_ SETA 1" --predefine="ARMCM4_FP SETA 1" --list=
.\listings\stdev_s.lst stdev_s.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DONE 0000006C

Symbol: DONE
   Definitions
      At line 54 in file stdev_s.s
   Uses
      None
Comment: DONE unused
stdev_loop 00000038

Symbol: stdev_loop
   Definitions
      At line 32 in file stdev_s.s
   Uses
      At line 42 in file stdev_s.s
Comment: stdev_loop used once
stdev_s 00000000

Symbol: stdev_s
   Definitions
      At line 6 in file stdev_s.s
   Uses
      At line 2 in file stdev_s.s
Comment: stdev_s used once
sum_loop 0000001C

Symbol: sum_loop
   Definitions
      At line 17 in file stdev_s.s
   Uses
      At line 25 in file stdev_s.s
Comment: sum_loop used once
test 00000000

Symbol: test
   Definitions
      At line 1 in file stdev_s.s
   Uses
      None
Comment: test unused
5 symbols
340 symbols in table
